name: Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  testing:
    name: Build and test
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        ports:
          - '5432:5432'
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v2
      - name: Set up Elixir
        uses: actions/setup-elixir@v1
        with:
          elixir-version: '1.10.3' # Define the elixir version [required]
          otp-version: '22.3' # Define the OTP version [required]
      - name: Restore dependencies cache
        uses: actions/cache@v2
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: ${{ runner.os }}-mix-
      - name: Install dependencies
        run: mix deps.get
      - run: npm install
        working-directory: ./assets
      - name: Create database
        run: mix ecto.create
      - name: Execute migrations
        run: mix ecto.migrate
      - name: Run tests
        run: mix test
      - name: Deploy to Heroku
        uses: actions/checkout@v2
      - name: Add backend remote origin
        run: git remote add heroku https://heroku:${{ secrets.HEROKU_API_KEY }}@git.heroku.com/${{ secrets.HEROKU_APP_NAME }}.git
      - run: git fetch --unshallow
      - name: Deploy to Heroku
        run: git push heroku master:refs/heads/master --force
